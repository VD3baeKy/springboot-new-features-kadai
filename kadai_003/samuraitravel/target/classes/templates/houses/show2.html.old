<!DOCTYPE html>
<html xmlns:th="https://www.thymeleaf.org" xmlns:sec="http://www.thymeleaf.org/extras/spring-security"> 

<head>


<div th:replace="~{fragment :: meta}">
</div>

<div th:replace="~{fragment :: styles}">
</div>

<!-- Flatpickr -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">

<!-- Bootstrap CSS -->
<!-- <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM" crossorigin="anonymous"> -->

<!-- jQueryのCDN -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<!-- BootstrapのCSSとJS（モーダルを使用するため） -->
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>


<!-- Bootstrap 
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">
-->

<title>民宿詳細</title>
</head>
<body>
	<div class="samuraitravel-wrapper">
		
		<!-- ヘッダー -->
		<div th:replace="~{fragment :: header}">
		</div>
		
		<main>
			<div th:if="${successMessage}" class="alert alert-info">
             	<span th:text="${successMessage}">
				</span>
            </div>  
			<div class="container pt-4 pb-5 samuraitravel-container">
				<div class="row justify-content-center">
					<div class="col-xxl-9 col-xl-10 col-lg-11">
						<nav class="mb-4" style="--bs-breadcrumb-divider: '>';" aria-label="breadcrumb">
							<div class="d-flex justify-content-between align-items-center" style="background-color: #e9ecef; padding: 10px;">
							<ol class="breadcrumb mb-0">
								<li class="breadcrumb-item">
									<a th:href="@{/}">
										ホーム
									</a>
								</li>
								<li class="breadcrumb-item">
									<a th:href="@{/houses}">
										民宿一覧
									</a>
								</li>
								<li class="breadcrumb-item active" aria-current="page">
									民宿詳細
								</li>
							</ol>
							<div sec:authorize="!isAnonymous()">&#9825お気に入り追加</div>	
							</div>					
						</nav>
						
						<h1 class="mb-4 text-center" th:text="${house.getName()}">
						</h1>
						<div th:if="${errorMessage}" class="alert alert-danger">
							<span th:text="${errorMessage}">
							</span>
 						</div>
						<div class="mb-4">
							<img th:if="${house.getImageName()}" th:src="@{/storage/__${house.getImageName()}__}" class="w-100" alt="民宿画像">
							<img th:unless="${house.getImageName()}" th:src="@{/images/noImage.png}" class="w-100" alt="NO IMAGE">
						</div>
						<div class="container">
							<div class="row">
								<div class="col-lg-8 container mb-4">
									<div class="row pb-2 mb-2 border-bottom">
										<div class="col-4">
											<span class="fw-bold">
												民宿名
											</span>
										</div>
										<div class="col">
											<span th:text="${house.getName()}">
											</span>
										</div>
									</div>
									<div class="row pb-2 mb-2 border-bottom">
										<div class="col-4">
  											<span class="fw-bold">
												  説明
											</span>
										</div>
										<div class="col">
											<span class="samuraitravel-pre-wrap" th:text="${house.getDescription()}">
											</span>
										</div>
									</div>
									<div class="row pb-2 mb-2 border-bottom">
										<div class="col-4">
											<span class="fw-bold">
												宿泊料金
											</span>
										</div>
										<div class="col">
											<span th:text="${#numbers.formatInteger(house.getPrice(), 1, 'COMMA') + '円'}">
											</span>
										</div>
									</div>
									<div class="row pb-2 mb-2 border-bottom">
										<div class="col-4">
											<span class="fw-bold">
												定員
											</span>
										</div>
										<div class="col">
											<span th:text="${house.getCapacity() + '人'}">
											</span>
										</div>
									</div>
									<div class="row pb-2 mb-2 border-bottom">
										<div class="col-4">
											<span class="fw-bold">
												郵便番号
											</span>
										</div>
										<div class="col">
											<span th:text="${house.getPostalCode()}">
											</span>
										</div>
									</div>
									<div class="row pb-2 mb-2 border-bottom">
										<div class="col-4">
											<span class="fw-bold">
												住所
											</span>
										</div>
										<div class="col">
											<span th:text="${house.getAddress()}">
											</span>
										</div>
									</div>
									<div class="row pb-2 mb-2 border-bottom">
										<div class="col-4">
											<span class="fw-bold">
												電話番号
											</span>
										</div>
										<div class="col">
											<span th:text="${house.getPhoneNumber()}">
											</span>
										</div>
									</div>
								</div>
								<div sec:authorize="isAnonymous()" class="col-lg-4 px-0 ps-lg-4 mb-4">
									<div class="card">
										<div class="card-body">
											<p class="card-text">
												予約するには
												<a th:href="@{/login}">
													ログイン
												</a>
												が必要です。
											</p>
											<button type="submit" class="btn text-white shadow-sm w-100 samuraitravel-btn" disabled>
												予約する
											</button>
										</div>
									</div>
								</div>
								<div sec:authorize="isAuthenticated()" class="col-lg-4 px-0 ps-lg-4 mb-4">
									<div class="card">
										<div class="card-body">
											<form method="get" th:action="@{/houses/__${house.getId()}__/reservations/input}" th:object="${reservationInputForm}">
												<div class="form-group mb-2">
													<label for="fromCheckinDateToCheckoutDate" class="col-form-label text-md-left fw-bold">
														チェックイン・チェックアウト
													</label>
													<div th:if="${#fields.hasErrors('fromCheckinDateToCheckoutDate')}" class="text-danger small mb-2" th:errors="*{fromCheckinDateToCheckoutDate}">
													</div>
													<input type="text" class="form-control" th:field="*{fromCheckinDateToCheckoutDate}">
												</div>
												<div class="form-group mb-4">
													<label for="numberOfPeople" class="col-form-label text-md-left fw-bold">宿泊人数</label>
													<div th:if="${#fields.hasErrors('numberOfPeople')}" class="text-danger small mb-2" th:errors="*{numberOfPeople}">
													</div>
													<input type="number" class="form-control" th:field="*{numberOfPeople}" min="1">
												</div>
												<div class="form-group">
													<button type="submit" class="btn text-white shadow-sm w-100 samuraitravel-btn">
														予約する
													</button>
												</div>
											</form>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
				
				<!-- Revueカード追加ココカラ -->
				<div>
 					<h3 th:text="'［' + ${house.getName()}+ '］のレビュー　全 ' + ${reviews.size()} +' 件'"></h3>
 					<div style="padding: 20px;">
					 	<button id="reviewLinkButton" class="btn text-white shadow-sm w-100 samuraitravel-btn">すべてのレビューを表示する</button>
					 	<script type="text/javascript" th:inline="javascript">
						    document.getElementById('reviewLinkButton').onclick = function() {
								var houseID= /*[[${houseID}]]*/ ;
								refString = "/reviews?reviewhouseId=" + houseID ;
						        location.href = refString;
						    };
						</script>
					 </div>
					<!-- <div th:if="${!hasWrittenReview}"> -->
					<div th:if="${loginwas==true}" style="padding: 20px;">
					 	<button id="reviewWriteButton" class="btn text-white shadow-sm w-100 samuraitravel-btn" th:if="${!hasWrittenReview}">レビューを投稿する</button>
					 	<script>
							window.onload = function() {
							    document.getElementById('reviewWriteButton').onclick = function() {
									$('#writeModal').modal('show'); // jQueryを使用してモーダルを表示
								};
							}
						</script>
						<!-- レビュー書込モーダル -->
						<div sec:authorize="isAuthenticated()" class="modal" id="writeModal" tabindex="-1" role="dialog">
							<div class="modal-dialog" role="document" data-backdrop="true">
								<div class="modal-content">
									<div class="modal-header">
										<h5 class="modal-title" th:text="'［'+${house.getName()}+ '］のレビュー投稿'">
										</h5>
										<button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closeModal()">
											<span aria-hidden="true">
												×
											</span>
										</button>
									</div>
									<div class="modal-body">
										<form method="post" id="actioncamon" th:action="@{/houses/__${house.getId()}__/review/__${currentUserId}__/write}" enctype="multipart/form-data" th:object="${reviewRegisterForm}">										
											<!-- <input type="hidden" th:name="${_csrf.parameterName}" th:value="${_csrf.token}"> -->
											<input type="hidden" id="mendoinaa" name="reviewUserId" th:value="${currentUserId}">
											<input type="hidden" id="mendoinaa" name="reviewhouseId" th:value="${house.getId()}">
											<div>
												<!-- <label for="contentChange"> -->
												<label>
													内容:
												</label><br>
												<textarea id="writeContent" name="reviewText" style="width: 90%;" value="">
												</textarea>
												<br th:if="${#fields.hasErrors('reviewText')}">
												<div th:if="${#fields.hasErrors('reviewText')}" class="text-danger small mb-2" th:errors="*{reviewText}"></div>   
											</div>
											<div>
												<!-- <label for="ratingChange"> -->
												<label>
													評価:
												</label><br>
												<select id="writeRatingNumber" name="rating">
													<option value="1">★☆☆☆☆</option>
													<option value="2">★★☆☆☆</option>
													<option value="3">★★★☆☆</option>
													<option value="4">★★★★☆</option>
													<option value="5">★★★★★</option>
												</select>
												<br th:if="${#fields.hasErrors('rating')}">
												<div th:if="${#fields.hasErrors('rating')}" class="text-danger small mb-2" th:errors="*{rating}"></div>
											</div><br>
									
											<button type="submit" class="btn btn-primary" id="writeReview">
												レビュー書込
											</button>
											<button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="closeModal()">
												キャンセル
											</button>
										</form>
									</div>
								</div>
								
							</div>
						</div>
						
						
					</div>
					<div sec:authorize="isAnonymous()">
						<span th:if="${loginwas==true}" th:text="'ログイン中のユーザーのID= ' + ${currentUserId}">
						</span>
						<br>
						<span th:if="${loginwas==true}" th:text="'ログイン中のユーザーのレビューがあるか？= ' + ${hasWrittenReview}">
						</span>
						<br>
						<span th:if="${loginwas==true}" th:text="'ログイン中のユーザーは有効か？= ' + ${userAll.get(currentUserId).getEnabled()}">		
						</span>
					</div>
					<p sec:authorize="isAnonymous()" class="card-text">
						レビューを投稿するには
						<a th:href="@{/login}">
							ログイン
						</a>
						が必要です。
					</p>
					<!-- <div class="card-container row justify-content-center align-items-center" th:if="${reviews.size() > 0}"> -->
					<div class="card-container row justify-content-center align-items-center">

						<p style="text-align: center;">
							<span th:if="${haveReviews<1}">
								まだレビューがありません。
							</span>
						</p>

						<!-- レビューカード表示 -->
						<script type="text/javascript" th:inline="javascript">
							
								window.onload = function() {
									/***** DEBUG MODE *****/
								var debugging=false;
								/**********************/
								
								var reviewToSome;
								var reviewsWithUserName = /*[[${reviewsWithUserName}]]*/ [];
								var userDetails = /*[[${userAll}]]*/ [];
								var houseName = /*[[${houseName}]]*/ ;
								var currentUserIdData=0;
								var loginWas = /*[[${loginwas}]]*/ ;
								var houseName = /*[[${houseName}]]*/ ;
								var isAuthenticatedData = /*[[${isAuthenticatedData}]]*/ ;
								
								if(debugging==true){
									console.log("isAuthenticatedData= "+isAuthenticatedData);
									if(isAuthenticatedData)console.log("isAuthenticatedData is true.");
									if(!isAuthenticatedData)console.log("isAuthenticatedData is false.");
								}
								
								if(loginWas==true){
									currentUserIdData = /*[[${currentUserId}]]*/ ; 	
								}
								
								if(debugging==true){
									console.log("reviewsWithUserName= "+reviewsWithUserName["0"].content);
									//console.log(reviewsWithUserName["0"].content);
									console.log("userDetails= "+userDetails["3"].id);
									//console.log(userDetails["3"].id);
									console.log("houseName= "+houseName);
									//console.log(houseName);
								}
								
							    // 初期設定
							    let currentPage = 0;
							    const cardsPerPage = 5;
							    const reviewList = document.getElementById('reviewList');
							    const prevButton = document.getElementById('prevButton');
							    const nextButton = document.getElementById('nextButton');
							
							    // カルーセルの更新
							    function updateCarousel() {
							        const totalCards = reviewList.children.length;
							        //const totalPages = Math.ceil(totalCards / cardsPerPage);
							         const totalPages = Math.ceil((totalCards - 1) / (cardsPerPage - 1)); // 1枚前のカードを含めるために調整
							        //const offset = -currentPage * 100; // 1ページあたり100%の幅
							        const offset = -(currentPage * (cardsPerPage - 1)) * 100 / cardsPerPage; // 1ページあたりのカード数を調整
							        reviewList.style.transform = `translateX(${offset}%)`;
							        
							        prevButton.disabled = currentPage === 0;
							        nextButton.disabled = currentPage === totalPages - 1;
							    }
							
							    // カルーセルのナビゲーション
							    prevButton.addEventListener('click', () => {
							        if (currentPage > 0) {
							            currentPage--;
							            updateCarousel();
							        }
							    });
							
							    nextButton.addEventListener('click', () => {
        							const totalCards = reviewList.children.length;
							        const totalPages = Math.ceil((totalCards - 1) / (cardsPerPage - 1)); // 1枚前のカードを含めるために調整
							        if (currentPage < totalPages - 1) {
							            currentPage++;
							            updateCarousel();
							        }
							    });
							
							    // レビューカードの生成
							    const idx = Object.keys(reviewsWithUserName).length;
							    for (let i = 0; i < idx; i++) {
							        const userId = reviewsWithUserName[i].userid;
							        const reviewid = reviewsWithUserName[i].reviewid;
							        const isUserExistencee = reviewsWithUserName[i].isUserExistencee.toString();
							        const houseid = reviewsWithUserName[i].houseid;
							        const ratingNum = reviewsWithUserName[i].rating;
							        const content = reviewsWithUserName[i].content;
							        let rating = '★'.repeat(ratingNum) + '☆'.repeat(5 - ratingNum);
							
							        const card = document.createElement('div');
							        card.className = 'review-card';
							        if(currentUserIdData==userId){
								        card.innerHTML = `
										    <p>${isUserExistencee}</p>
										    <h5>${rating}</h5>
										    <h5 class="content-text" style="display: none;">${content}</h5>
										    <h5>${content.length > 10 ? content.substring(0, 7) + '...' : content}</h5>
									        <a href="#" class="edit-link" data-id="${reviewid}" data-house-id="${houseid}" data-content="${content}" data-house-name="${houseName}" data-rating="${ratingNum}" data-toggle="modal" data-target="#editModal">編集</a>
									        <a href="#" class="delete-link" data-id="${reviewid}" data-house-id="${houseid}" data-content="${content}" data-house-name="${houseName}" data-rating="${ratingNum}" data-toggle="modal" data-target="#deleteModal">削除</a>
										`;
									}else{
										card.innerHTML = `
										    <p>${isUserExistencee}</p>
										    <h5>${rating}</h5>
										    <h5 class="content-text" style="display: none;">${content}</h5>
										    <h5>${content.length > 10 ? content.substring(0, 7) + '...' : content}</h5>
										`;
									}
							        reviewList.appendChild(card);
							    }
							    updateCarousel();
							
							    // モーダルのイベントリスナー
							    if (isAuthenticatedData) {
							        // 編集リンクのイベントリスナー
								    document.querySelectorAll('.edit-link').forEach(button => {
								        button.addEventListener('click', function(event) {
								            event.stopPropagation(); // イベントの伝播を防ぐ
								            const reviewIdData = this.getAttribute('data-id');
								            const contentData = this.getAttribute('data-content');
								            const houseIdData = this.getAttribute('data-house-id');
								            const ratingData = this.getAttribute('data-rating');
								            document.getElementById('editContent').value = contentData;
								            document.getElementById('editRatingNumber').value = ratingData;
								            document.getElementById('actioncamen2').action = `/houses/${houseIdData}/review/edit`;
								            document.getElementById('mendoina2').value = reviewIdData;
								            $('#editModal').modal('show');
								        });
								    });

							
							        // 削除リンクのイベントリスナー
								    document.querySelectorAll('.delete-link').forEach(button => {
								        button.addEventListener('click', function(event) {
								            event.stopPropagation(); // イベントの伝播を防ぐ
								            const reviewIdData = this.getAttribute('data-id');
								            const houseIdData = this.getAttribute('data-house-id');
								            document.getElementById('actioncamen1').action = `/houses/${houseIdData}/review/delete`;
								            document.getElementById('mendoina1').value = reviewIdData;
								            $('#deleteModal').modal('show');
								        });
								    });
							
							        document.getElementById('confirmDelete').addEventListener('click', function() {
							            const reviewToDelete = document.getElementById('mendoina1').value;
							            if (reviewToDelete) {
							                window.location.href = `/houses/${houseId}/review/${reviewToDelete}/delete`;
							            }
							        });
							    }
							
							    // レビュー投稿モーダルの表示
							    const reviewWriteButton = document.getElementById('reviewWriteButton');
							    if (reviewWriteButton) {
							        reviewWriteButton.onclick = function() {
							            $('#writeModal').modal('show');
							        };
							    }
							   
							     // カードをクリックしたときのイベントリスナーを設定
							    document.querySelectorAll('.review-card').forEach(card => {
							        card.addEventListener('click', function(event) {
							            // 編集や削除のリンクをクリックした場合は、カードのクリックイベントを発火させない
							            if (event.target.matches('.edit-link, .delete-link')) {
							                return;
							            }
							            const content = this.querySelector('.content-text').textContent; // 特定のクラスを持つ要素を取得
							            document.getElementById('modalContent').textContent = content; // モーダルにコンテンツを設定
							            $('#contentModal').modal('show'); // モーダルを表示
							        });
							    });
							};
						</script>
						
						<!-- カード拡大モーダルL -->
						<!-- モーダルのHTML -->
						<div class="modal fade" id="contentModal" tabindex="-1" role="dialog" aria-labelledby="contentModalLabel" aria-hidden="true">
						    <div class="modal-dialog" role="document">
						        <div class="modal-content">
						            <div class="modal-header">
						                <h5 class="modal-title" id="contentModalLabel">レビュー詳細</h5>
						                
						                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closeModal()">
						                    <span aria-hidden="true">&times;</span>
						                </button>
						                
						            </div>
						            <div class="modal-body" id="modalContent">
						                <!-- ここにコンテンツが表示されます -->
						            </div>
						            
						            <div class="modal-footer">
						                <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="closeModal()">閉じる</button>
						            </div>
						            
						        </div>
						    </div>
						</div>

						<!-- 削除確認モーダル -->
						<div sec:authorize="isAuthenticated()" class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
							<div class="modal-dialog" role="document">
								<div class="modal-content">
									<div class="modal-header">
										<h5 class="modal-title" id="deleteModalLabel">
											削除確認
										</h5>
										<button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closeModal()">
											<span aria-hidden="true">
												×
											</span>
										</button>
									</div>									
									<div class="modal-body">
										本当にこのレビューを削除しますか？
									</div>
									<div class="modal-footer">
										<!-- <form method="post" id="actioncamen" th:action="@{/houses/__${house.getId()}__/review/__${currentUserId}__/delete}"> -->
											<form method="post" id="actioncamen1" action="#">												
											<input type="hidden" th:name="${_csrf.parameterName}" th:value="${_csrf.token}">
											<input type="hidden" id="mendoina1" name="reviewIdData" value="0">
											<input type="hidden" id="mendoina1" name="valueData" value="delete">
											<button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="closeModal()">
												キャンセル
											</button>
											<button type="submit" class="btn btn-danger" id="confirmDelete" value="delete">
												削除
											</button>
										</form>
									</div>
								</div>
							</div>
						</div>
						
						<!-- 編集モーダル -->
						<div sec:authorize="isAuthenticated()" class="modal" id="editModal" tabindex="-1" role="dialog">
							<div class="modal-dialog" role="document" data-backdrop="true">
								<div class="modal-content">
									<div class="modal-header">
										<h5 class="modal-title" th:text="'［'+${house.getName()}+ '］のレビュー編集'">
										</h5>
										<button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closeModal()">
											<span aria-hidden="true">
												×
											</span>
										</button>
									</div>
									<div class="modal-body">
										<!-- <form method="post" id="actioncamen" th:action="@{/houses/__${house.getId()}__/review/__${currentUserId}__/edit}"> -->
										<form method="post" id="actioncamen2" action="#">											
											<input type="hidden" th:name="${_csrf.parameterName}" th:value="${_csrf.token}">
											<input type="hidden" id="mendoina2" name="reviewIdData" value="0">
											<div>
												<!-- <label for="contentChange"> -->
												<label>
													内容:
												</label><br>
												<textarea id="editContent" name="contentChange" style="width: 90%;">
												</textarea>
											</div>
											<div>
												<!-- <label for="ratingChange"> -->
												<label>
													評価:
												</label><br>
												<select id="editRatingNumber" name="ratingChange">
													<option value="1">★☆☆☆☆</option>
													<option value="2">★★☆☆☆</option>
													<option value="3">★★★☆☆</option>
													<option value="4">★★★★☆</option>
													<option value="5">★★★★★</option>
												</select>
											</div><br>
									<!-- </div> -->
									<!-- <div class="modal-footer"> -->
											<button type="submit" class="btn btn-primary" id="saveChanges">
												保存
											</button>
											<button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="closeModal()">
												キャンセル
											</button>
										</form>
									</div>
								</div>
								
							</div>
						</div>
						
						<div id="carouselContainer">
						    <div id="carousel">
						        <ul id="reviewList">
						            <!-- ここにレビューカードが追加される -->
						    </div>
						    <br>
						    <div class="carousel-buttons">
						        <button id="prevButton" class="btn text-white shadow-sm w-100 samuraitravel-btn">前へ</button>
						        <button id="nextButton" class="btn text-white shadow-sm w-100 samuraitravel-btn">次へ</button>
						    </div>
						</div>
						 
						
					</div>
				</div>
			</div>	
			</main>
		</div>
		
		<!-- Flatpickr -->
		<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
		<script src="https://cdn.jsdelivr.net/npm/flatpickr/dist/l10n/ja.js"></script>
		<script th:src="@{/js/flatpickr.js}"></script>
		
		<!-- Bootstrap SCRIPT -->
		<!-- <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-geWF76RCwLtnZ8qwWowPQNguL3RmwHVBC9FhGdlKrxdiJJigb/j/68SIy3Te4Bkz" crossorigin="anonymous"></script>  -->
		<!--<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script> -->
		
		
		<!-- フッター -->
		<div th:replace="~{fragment :: footer}">
		</div>
		<div th:replace="~{fragment :: scripts}">
		</div>
		
		<script>
			function closeModal() {
				    $('#editModal').modal('hide');
				    $('#deleteModal').modal('hide');
				    $('#writeModal').modal('hide');
				    $('#contentModal').modal('hide');
			}
		</script>
								
	</body>

</html>